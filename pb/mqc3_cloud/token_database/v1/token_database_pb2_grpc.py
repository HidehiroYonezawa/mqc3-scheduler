# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from mqc3_cloud.token_database.v1 import token_database_pb2 as mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2


class TokenDatabaseServiceStub(object):
    """The token database service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateToken = channel.unary_unary(
                '/mqc3_cloud.token_database.v1.TokenDatabaseService/CreateToken',
                request_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenRequest.SerializeToString,
                response_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenResponse.FromString,
                )
        self.GetTokenInfo = channel.unary_unary(
                '/mqc3_cloud.token_database.v1.TokenDatabaseService/GetTokenInfo',
                request_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoRequest.SerializeToString,
                response_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoResponse.FromString,
                )
        self.DeleteToken = channel.unary_unary(
                '/mqc3_cloud.token_database.v1.TokenDatabaseService/DeleteToken',
                request_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenRequest.SerializeToString,
                response_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenResponse.FromString,
                )
        self.RenewToken = channel.unary_unary(
                '/mqc3_cloud.token_database.v1.TokenDatabaseService/RenewToken',
                request_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenRequest.SerializeToString,
                response_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenResponse.FromString,
                )
        self.GetTokenInfoList = channel.unary_unary(
                '/mqc3_cloud.token_database.v1.TokenDatabaseService/GetTokenInfoList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoListResponse.FromString,
                )


class TokenDatabaseServiceServicer(object):
    """The token database service.
    """

    def CreateToken(self, request, context):
        """Add a new token to the database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTokenInfo(self, request, context):
        """Get the token information from the database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteToken(self, request, context):
        """Delete a token and its user information from the database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenewToken(self, request, context):
        """Update the expiration time of a token in the database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTokenInfoList(self, request, context):
        """Get the list of tokens in the database.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TokenDatabaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateToken,
                    request_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenRequest.FromString,
                    response_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenResponse.SerializeToString,
            ),
            'GetTokenInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTokenInfo,
                    request_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoRequest.FromString,
                    response_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoResponse.SerializeToString,
            ),
            'DeleteToken': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteToken,
                    request_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenRequest.FromString,
                    response_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenResponse.SerializeToString,
            ),
            'RenewToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RenewToken,
                    request_deserializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenRequest.FromString,
                    response_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenResponse.SerializeToString,
            ),
            'GetTokenInfoList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTokenInfoList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mqc3_cloud.token_database.v1.TokenDatabaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TokenDatabaseService(object):
    """The token database service.
    """

    @staticmethod
    def CreateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mqc3_cloud.token_database.v1.TokenDatabaseService/CreateToken',
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenRequest.SerializeToString,
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.CreateTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTokenInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mqc3_cloud.token_database.v1.TokenDatabaseService/GetTokenInfo',
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoRequest.SerializeToString,
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mqc3_cloud.token_database.v1.TokenDatabaseService/DeleteToken',
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenRequest.SerializeToString,
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.DeleteTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenewToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mqc3_cloud.token_database.v1.TokenDatabaseService/RenewToken',
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenRequest.SerializeToString,
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.RenewTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTokenInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mqc3_cloud.token_database.v1.TokenDatabaseService/GetTokenInfoList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            mqc3__cloud_dot_token__database_dot_v1_dot_token__database__pb2.GetTokenInfoListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
